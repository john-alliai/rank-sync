---
export interface Feature {
  title: string;
  description: string;
  icon?: string;
}

export interface Props {
  features: Feature[];
  background?: 'dark' | 'dark-surface';
}

const { 
  features,
  background = 'dark'
} = Astro.props;

const bgClass = background === 'dark-surface' ? 'bg-dark-surface' : 'bg-dark';
---

<section class={`py-20 ${bgClass}`}>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
      {features.map((feature, index) => (
        <div 
          class="bg-dark-surface p-6 rounded-xl shadow-lg animate-fade-in"
          style={`animation-delay: ${index * 100}ms`}
        >
          {feature.icon && <div class="text-3xl mb-4">{feature.icon}</div>}
          <h3 class="text-xl font-semibold mb-2 text-white">{feature.title}</h3>
          <p class="text-gray-400">{feature.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    opacity: 0;
    animation: fade-in 0.6s ease-out forwards;
  }
</style>