---
export interface Metric {
  label: string;
  value: string;
}

export interface Testimonial {
  quote: string;
  author: string;
  company: string;
}

export interface Props {
  testimonial: Testimonial;
  metrics: Metric[];
}

const { testimonial, metrics } = Astro.props;
---

<section class="py-20 bg-dark-surface">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <blockquote class="max-w-3xl mx-auto text-center animate-fade-in">
      <p class="text-2xl font-medium mb-6 text-white">
        "{testimonial.quote}"
      </p>
      <footer class="text-electric-cyan">
        â€” {testimonial.author}, {testimonial.company}
      </footer>
    </blockquote>
    
    <div class="mt-12 grid grid-cols-1 md:grid-cols-3 gap-8">
      {metrics.map((metric, index) => (
        <div 
          class="text-center animate-fade-in"
          style={`animation-delay: ${(index + 1) * 100}ms`}
        >
          <div class="text-3xl font-bold text-electric-cyan mb-2">
            {metric.value}
          </div>
          <div class="text-gray-400">{metric.label}</div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    opacity: 0;
    animation: fade-in 0.6s ease-out forwards;
  }
</style>