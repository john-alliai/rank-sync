---
export interface NavLink {
  text: string;
  href: string;
}

export interface Props {
  logo?: string;
  links?: NavLink[];
  ctaButton?: {
    text: string;
    href: string;
  };
}

const {
  logo = 'RankSync',
  links = [
    { text: 'Features', href: '#features' },
    { text: 'Pricing', href: '#pricing' },
    { text: 'FAQ', href: '#faq' },
    { text: 'Duda', href: '/duda' }
  ],
  ctaButton = {
    text: 'Start Free Trial',
    href: '#'
  }
} = Astro.props;
---

<header 
  class="fixed top-0 left-0 right-0 z-50 transition-all duration-300 py-5 bg-transparent"
  id="header"
>
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 animate-fade-in">
    <div class="flex justify-between items-center">
      <div class="flex items-center animate-slide-in">
        <a href="/" class="text-electric-cyan font-bold text-2xl">{logo}</a>
      </div>
      
      <nav class="hidden md:flex space-x-8 animate-slide-in">
        {links.map(link => (
          <a 
            href={link.href} 
            class="text-gray-300 hover:text-electric-cyan transition-colors"
          >
            {link.text}
          </a>
        ))}
      </nav>
      
      <div class="hidden md:block animate-slide-in">
        <a 
          href={ctaButton.href}
          class="px-4 py-2 bg-electric-cyan text-dark rounded-xl font-semibold hover:bg-electric-cyan/90 transition-all transform hover:scale-105 inline-block"
        >
          {ctaButton.text}
        </a>
      </div>
      
      <button 
        class="md:hidden text-white animate-slide-in"
        aria-label="Menu"
        id="mobile-menu-button"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
  </div>
</header>

<script>
  const header = document.getElementById('header');
  let lastScroll = 0;

  window.addEventListener('scroll', () => {
    const currentScroll = window.scrollY;
    
    if (currentScroll > 10) {
      header?.classList.remove('bg-transparent', 'py-5');
      header?.classList.add('bg-dark/90', 'backdrop-blur-md', 'py-3', 'shadow-lg');
    } else {
      header?.classList.add('bg-transparent', 'py-5');
      header?.classList.remove('bg-dark/90', 'backdrop-blur-md', 'py-3', 'shadow-lg');
    }
    
    lastScroll = currentScroll;
  });
</script>

<style>
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slide-in {
    from {
      opacity: 0;
      transform: translateX(-20px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .animate-fade-in {
    opacity: 0;
    animation: fade-in 0.6s ease-out forwards;
  }

  .animate-slide-in {
    opacity: 0;
    animation: slide-in 0.6s ease-out forwards;
  }
</style>